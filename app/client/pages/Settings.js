import React, {Fragment, useState} from 'react';
import { useSession} from "next-auth/react"
import { Dialog, Transition } from '@headlessui/react';
import axios from 'axios';
import Head from 'next/head';
import Nav from '../components/Nav';
import { signOut } from 'next-auth/react'

const Settings = () => {
  const { data: session } = useSession()
  const[isOpen, setIsOpen] = useState(false);

  const deleteAccount = async()=>{
    setIsOpen(false);
    const res = await axios.post('http://localhost:3001/deleteUser', {user: session.user.user_id})
    console.log(res)
    if(res.data.message){
      signOut({ callbackUrl: 'http://localhost:3000/' })
    }
  }
  return (
    <div>
        <Head>
            <title>FABulous</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <Nav />
        <div className='container mx-auto flex justify-center'>
          <button className="text-slate-50 bg-red-600 border-none px-4 py-2 rounded-md my-2 ease-in-out duration-300 hover:bg-red-800 hover:shadow-xl hover:cursor-pointer" onClick={()=>setIsOpen(true)}>Delete Account</button>

          <Transition appear show={isOpen} as={Fragment}>
            <Dialog as="div" className="relative z-10" onClose={()=>setIsOpen(false)}>
              <Transition.Child
                as={Fragment}
                enter="ease-out duration-300"
                enterFrom="opacity-0"
                enterTo="opacity-100"
                leave="ease-in duration-200"
                leaveFrom="opacity-100"
                leaveTo="opacity-0"
              >
                <div className="fixed inset-0 bg-black bg-opacity-25" />
              </Transition.Child>

              <div className="fixed inset-0 overflow-y-auto">
                <div className="flex min-h-full items-center justify-center p-4 text-center">
                  <Transition.Child
                    as={Fragment}
                    enter="ease-out duration-300"
                    enterFrom="opacity-0 scale-95"
                    enterTo="opacity-100 scale-100"
                    leave="ease-in duration-200"
                    leaveFrom="opacity-100 scale-100"
                    leaveTo="opacity-0 scale-95"
                  >
                    <Dialog.Panel className="w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all">
                      <Dialog.Title
                        as="h3"
                        className="text-lg font-medium leading-6 text-gray-900"
                      >
                        Delete Account?
                      </Dialog.Title>
                      <div className="mt-2">
                        <p className="text-sm text-gray-500">
                          Are you sure you want to permanently delete your account and all your files? This action cannot be undone.
                        </p>
                      </div>

                      <div className="mt-4">
                        <button
                          type="button"
                          className="inline-flex justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 mx-2 text-sm font-medium text-slate-50 hover:bg-red-800 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2"
                          onClick={deleteAccount}
                        >
                          Yes, Delete it!
                        </button>
                        <button
                          type="button"
                          className="inline-flex justify-center rounded-md border border-transparent bg-indigo-800 px-4 py-2 mx-2 text-sm font-medium text-slate-50 hover:bg-indigo-900 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2"
                          onClick={()=>setIsOpen(false)}
                        >
                          No, sorry.
                        </button>
                        
                      </div>
                    </Dialog.Panel>
                  </Transition.Child>
                </div>
              </div>
            </Dialog>
          </Transition>
        </div>

    </div>
  )
}

export default Settings